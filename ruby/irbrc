require 'irb/completion'
require 'rubygems'
require 'looksee'
require 'fileutils'

IRB.conf[:SAVE_HISTORY] = 1000
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb_history"
IRB.conf[:PROMPT_MODE] = :SIMPLE
IRB.conf[:AUTO_INDENT] = true

def loaded_gems
  rv = %x( ruby -v )
  ruby_ver = rv[/^ruby.\d.\d.\d/].gsub!("ruby ","")
  gems = Dir["#{Dir.home}/.gem/ruby/#{ruby_ver}/gems/*"]
  gems.each {|x| p x.gsub!(/\/.*\//,'')}
  nil
end

def dir_ls
  files = Dir.glob('*').sort
  files.each do |f|
    if Dir.exists? f
      puts f + '/'
    else
      puts f
    end
  end
  nil
end

class Object
  def local_methods(obj = self)
    (obj.orig_methods - obj.class.superclass.instance_methods).sort
  end

  # Print docs, ex: String.ri :downcase
  def ri(method = nil)
    unless method && method =~ /^[A-Z]/ # if class isn't specified
      klass = self.kind_of?(Class) ? name : self.class.name
      method = [klass, method].compact.join('#')
    end
    puts `ri '#{method}'`
  end
end

module Kernel
  alias_method :orig_methods, :methods

  def methods(*args)
    if caller.first =~ /(irb)/
      self.ls(*args)
    else
      orig_methods
    end
  end

  def r
    reload!
  end
end
